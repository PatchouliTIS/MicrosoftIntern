REFERENCE @"InterleavingDebugger.Scope.dll";

USING XTCache.LiveSearch.DataMining.Foray.JsonLog;

#DECLARE FlightId string = "@@FlightId@@";

#DECLARE StartTime DateTime = DateTime.ParseExact("@@StartTime@@", "yyyy-MM-dd_HH:mm:ss", null);
#DECLARE StartDate string = @StartTime.ToString("yyyy-MM-dd");

#DECLARE EndTime DateTime = DateTime.ParseExact("@@EndTime@@", "yyyy-MM-dd_HH:mm:ss", null);
#DECLARE EndDate string = @EndTime.ToString("yyyy-MM-dd");

#DECLARE Columns string = String.Join(",", new [] {
    "Request_ImpressionGuid", 
    "ClientId", 
    "Query_RawQuery", 
    "Request_RequestTime_Copy", 
    "Market", 
    "Base_Query_IsNormal", 
    "AllFlightFactors", 
    "AllFlightLevels",
    "FDFilter_TRUEMKT" 
    });
    


UnifiedCache = VIEW @"/shares/searchDM/distrib/released/XTCacheProd/XTCache/XTCacheView.view" PARAMS (
    Cache = "MSLAPI_ForayWeb_BaseLevel",
    Columns = @Columns,
    StartDate = @StartDate,
    EndDate = @EndDate,
    FailoverTo = "None",
    Datasets = "Bing.com",
    Filter = "(((REGEX(@\"^(?i:www\\.bing\\.com)$\").IsMatch(AppInfoServerName)) AND (REGEX(@\"^(?i:SERP|Web)$\").IsMatch(XTCache.LiveSearch.DataMining.Foray.JsonLog.ForayUtilities.uc(Vertical))) AND ((Vertical.ToLower() == \"web\" && Page_Name == \"\")==(false))) AND (NOT(REGEX(@\"^(?i:\\s*)$\")).IsMatch(Foray_RawMUID)) AND (REGEX(@\"^(?i:Bing\\.com)$\").IsMatch(Dataset)) AND (NOT(REGEX(@\"^(?i:beta.*)$\")).IsMatch(Request_Domain)) AND (NOT(REGEX(@\"^(?i:Page\\.AppCacheManifest)$\")).IsMatch(Page_Name)) AND XTCache.LiveSearch.DataMining.Foray.JsonLog.ForayUtilities.GetFlightPropertyForNumberline(AllFlightFactors, AllFlightOverrides, \"preallocation\").ToLower()!= \"true\")"
);


QuerySeg = VIEW @"/shares/searchDM/distrib/released/BFT/BFTSearchView/QuerySegSideStream.view" PARAMS (
    StartDate = @StartDate,
    EndDate = @EndDate );



FlightData = SELECT 
    Request_ImpressionGuid AS ImpressionGuid,
    ClientId,
    Query_RawQuery.Trim().ToLower() AS RawQuery,
    Request_RequestTime_Copy AS Request_RequestTime, 
    Request_RequestTime_Copy.ToString("d") AS RequestDate,
    Market,
    FDFilter_TRUEMKT
FROM 
    UnifiedCache
WHERE 
    Base_Query_IsNormal
    && DateTime.Compare(@StartTime, Request_RequestTime_Copy) <= 0
    && DateTime.Compare(Request_RequestTime_Copy, @EndTime) <= 0
    && REGEX(@"^(?i:" + @FlightId + ")$").IsMatch(XTCache.LiveSearch.DataMining.Foray.JsonLog.ForayUtilities.uc(XTCache.LiveSearch.DataMining.Foray.JsonLog.ForayUtilities.GetFlightPropertyForNumberline(AllFlightFactors, AllFlightLevels, "flt")))
    && FDFilter_TRUEMKT == Market;


FlightData = SELECT 
    F.*,
    // Query Seg Side columns
    Q.qsQueryLevel ?? "Tail" AS QueryLevel,
    Q.qsQASIsAdult ?? false AS IsAdult,
    Q.qsQASIsCelebrities ?? false AS IsCelebrities,
    Q.qsQASIsCommerce ?? false AS IsCommerce,
    Q.qsQASIsDictionary ?? false AS IsDictionary,
    Q.qsQASIsEvents ?? false AS IsEvents,
    Q.qsQASIsFinance ?? false AS IsFinance,
    Q.qsQASIsGalleries ?? false AS IsGalleries,
    Q.qsQASIsHowTo ?? false AS IsHowTo,
    Q.qsQASIsImage ?? false AS IsImage,
    Q.qsQASIsLocal ?? false AS IsLocal,
    Q.qsQASIsMaps ?? false AS IsMaps,
    Q.qsQASIsMovieShowtimes ?? false AS IsMovieShowtimes,
    Q.qsQASIsMovieTitle ?? false AS IsMovieTitle,
    Q.qsQASIsMusic ?? false AS IsMusic,
    Q.qsQASIsName ?? false AS IsName,
    Q.qsQASIsNavigational ?? false AS IsNavigational,
    Q.qsQASIsQuestionPattern ?? false AS IsQuestionPattern,
    Q.qsQASIsRecipes ?? false AS IsRecipes,
    Q.qsQASIsTech ?? false AS IsTech,
    Q.qsQASIsTop100KQueries ?? false AS IsTop100KQueries,
    Q.qsQASIsTvShows ?? false AS IsTvShows,
    Q.qsQASIsVideoExcludesAdult ?? false AS IsVideoExcludesAdult,
    Q.qsQASIsWikipediaReference ?? false AS IsWikipediaReference
FROM 
    FlightData AS F LEFT OUTER JOIN QuerySeg AS Q ON F.ImpressionGuid == Q.Request_ImpressionGuid
WHERE !String.IsNullOrEmpty(F.RawQuery); 

// Here we should calculate some experiment-wide metrics


OUTPUT TO SSTREAM @@FlightData@@ CLUSTERED BY RawQuery SORTED BY RawQuery;

OUTPUT TO SSTREAM @@FlightDataByGuid@@ CLUSTERED BY ImpressionGuid SORTED BY ImpressionGuid;

SELECT 
    @FlightId AS FlightId,
    @StartTime.ToString() AS StartTime,
    @EndTime.ToString() AS EndTime,
    COUNT() AS ImpressionTotal,
    COUNT(DISTINCT RawQuery) AS QueryTotal,
    COUNT(DISTINCT ClientId) AS UserTotal; 

OUTPUT TO SSTREAM @@ExperimentStats@@;


// Generated by ScopeStudio, version 2.3.4000.4
